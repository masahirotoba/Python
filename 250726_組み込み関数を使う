# 組み込み関数を確認できる
>>> print(globals())
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>}

# ketごとになってしまう
>>> ranking = { 'A':100, 'B':85, 'C':92 }
>>> for key in ranking: print(key)
...
A
B
C

# ... （セカンダリプロンプト）
複数行にわたる構文の続きの入力を待っている状態
for文、if文、関数定義などの途中で表示される

# インデントがないのでエラーになるので注意
ranking = { 'A':100, 'B':85, 'C':92 }
for key in ranking:
... print(key)
  File "<stdin>", line 2
    print(key)
    ^^^^^
IndentationError: expected an indented block after 'for' statement on line 1

# これなら正常に動く
IndentationError: expected an indented block after 'for' statement on line 1
>>> ranking = { 'A':100, 'B':85, 'C':92 }
>>> for key in ranking:
...     print(key)
...
A
B
C

# ... （セカンダリプロンプト）を終わらせる方法

空行（何も入力せずにEnter） で実行される

例：
python>>> for key in ranking:        # Enterで...に移行
...     print(key)            # Enterで次の...に移行
...                           # 空行でEnter → 実行される
A
B
C
>>>

一行コードの場合：
python>>> print("Hello")            # Enterで即座に実行
Hello
>>>

つまり、**複数行構文を終わらせるには「空行でEnter」**が必要で、単純にEnterキーだけでは続きの入力を求められます。この仕組みで、Pythonは複数行にわたるコードブロックがどこで終わるかを判断しています。

# 組み込みのsorted関数を使う
>>> print(sorted(ranking, key = ranking.get))
['B', 'C', 'A']
